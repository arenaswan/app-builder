{"version":3,"sources":["../../../src/components/ColorPicker/utils.ts"],"names":["validateColor","value","fallback","isValid","toHex","toUpperCase","getColorName","color","presetColors","v"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAEO,SAASA,aAAT,CAAuBC,KAAvB,EAAoD;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;AACzDD,EAAAA,KAAK,GAAG,wBAAUA,KAAV,CAAR;AACA,SAAOA,KAAK,CAACE,OAAN,KAAkB,MAAMF,KAAK,CAACG,KAAN,GAAcC,WAAd,EAAxB,GAAsDH,QAA7D;AACD;;AAEM,SAASI,YAAT,CAAsBC,KAAtB,EAAkCC,YAAlC,EAAqD;AAC1D,MAAI,qBAAQA,YAAR,CAAJ,EAA2B;AACzB,WAAOD,KAAP;AACD;;AACD,SAAO,qBAAQC,YAAR,EAAsBC,CAAC,IAAIT,aAAa,CAACS,CAAD,CAAb,KAAqBF,KAAhD,KAA0DA,KAAjE;AACD","sourcesContent":["import { isArray, findKey } from \"lodash\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\nexport function validateColor(value: any, fallback = null) {\r\n  value = tinycolor(value);\r\n  return value.isValid() ? \"#\" + value.toHex().toUpperCase() : fallback;\r\n}\r\n\r\nexport function getColorName(color: any, presetColors: any) {\r\n  if (isArray(presetColors)) {\r\n    return color;\r\n  }\r\n  return findKey(presetColors, v => validateColor(v) === color) || color;\r\n}\r\n"],"file":"utils.js"}