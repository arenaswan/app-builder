{"version":3,"sources":["../../../src/components/TextAlignmentSelect/index.tsx"],"names":["TextAlignmentSelect","className","props","v","k","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;AAQA;AACe,SAASA,mBAAT,OAA6D;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAhBC,KAAgB;;AAC1E;AAAA;AACE;AACA,wCAAS,oBAAOA,KAAP,EAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU,wBAAWA,CAAX,EAAc,OAAd,CAAxB,CAAT,eACE,6BAAC,cAAD,CAAO,KAAP;AAAa,MAAA,SAAS,EAAE,yBAAG,uBAAH,EAA4BH,SAA5B;AAAxB,OAAoEC,KAApE,gBACE,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAA4B,MAAA,eAAe,EAAE,CAA7C;AAAgD,MAAA,eAAe,EAAE;AAAjE,oBACE,6BAAC,cAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,MAApB;AAA2B,mBAAU;AAArC,oBACE,6BAAC,0BAAD,OADF,CADF,CADF,eAME,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAC,cAAf;AAA8B,MAAA,eAAe,EAAE,CAA/C;AAAkD,MAAA,eAAe,EAAE;AAAnE,oBACE,6BAAC,cAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,mBAAU;AAAvC,oBACE,6BAAC,4BAAD,OADF,CADF,CANF,eAWE,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAC,aAAf;AAA6B,MAAA,eAAe,EAAE,CAA9C;AAAiD,MAAA,eAAe,EAAE;AAAlE,oBACE,6BAAC,cAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,OAApB;AAA4B,mBAAU;AAAtC,oBACE,6BAAC,2BAAD,OADF,CADF,CAXF,CADF;AAFF;AAsBD;;AAEDF,mBAAmB,CAACK,YAApB,GAAmC;AACjCJ,EAAAA,SAAS,EAAE;AADsB,CAAnC","sourcesContent":["import { pickBy, startsWith } from \"lodash\";\r\nimport React from \"react\";\r\nimport cx from \"classnames\";\r\nimport Radio from \"antd/lib/radio\";\r\nimport Tooltip from \"antd/lib/tooltip\";\r\n\r\nimport AlignLeftOutlinedIcon from \"@ant-design/icons/AlignLeftOutlined\";\r\nimport AlignCenterOutlinedIcon from \"@ant-design/icons/AlignCenterOutlined\";\r\nimport AlignRightOutlinedIcon from \"@ant-design/icons/AlignRightOutlined\";\r\n\r\nimport \"./index.less\";\r\n\r\ntype OwnProps = {\r\n  className?: string;\r\n};\r\n\r\ntype Props = OwnProps & typeof TextAlignmentSelect.defaultProps;\r\n\r\n// @ts-expect-error ts-migrate(2700) FIXME: Rest types may only be created from object types.\r\nexport default function TextAlignmentSelect({ className, ...props }: Props) {\r\n  return (\r\n    // Antd RadioGroup does not use any custom attributes\r\n    <div {...pickBy(props, (v, k) => startsWith(k, \"data-\"))}>\r\n      <Radio.Group className={cx(\"text-alignment-select\", className)} {...props}>\r\n        <Tooltip title=\"Align left\" mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n          <Radio.Button value=\"left\" data-test=\"TextAlignmentSelect.Left\">\r\n            <AlignLeftOutlinedIcon />\r\n          </Radio.Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Align center\" mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n          <Radio.Button value=\"center\" data-test=\"TextAlignmentSelect.Center\">\r\n            <AlignCenterOutlinedIcon />\r\n          </Radio.Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Align right\" mouseEnterDelay={0} mouseLeaveDelay={0}>\r\n          <Radio.Button value=\"right\" data-test=\"TextAlignmentSelect.Right\">\r\n            <AlignRightOutlinedIcon />\r\n          </Radio.Button>\r\n        </Tooltip>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n}\r\n\r\nTextAlignmentSelect.defaultProps = {\r\n  className: null,\r\n};\r\n"],"file":"index.js"}