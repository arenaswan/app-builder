{"version":3,"sources":["../../src/visualizations/prop-types.ts"],"names":["VisualizationOptions","PropTypes","object","Data","shape","columns","arrayOf","isRequired","rows","VisualizationType","id","number","type","string","name","options","RendererPropTypes","visualizationName","data","onOptionsChange","func","EditorPropTypes"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,oBAAoB,GAAGC,mBAAUC,MAAvC;;AAMG;AAEH,IAAMC,IAAiC,GAAGF,mBAAUG,KAAV,CAAgB;AACxDC,EAAAA,OAAO,EAAEJ,mBAAUK,OAAV,CAAkBL,mBAAUC,MAA5B,EAAoCK,UADW;AAExDC,EAAAA,IAAI,EAAEP,mBAAUK,OAAV,CAAkBL,mBAAUC,MAA5B,EAAoCK;AAFc,CAAhB,CAA1C;;AAYA;AACA,IAAME,iBAA2D,GAAGR,mBAAUG,KAAV,CAAgB;AAClFM,EAAAA,EAAE,EAAET,mBAAUU,MADoE;AAElFC,EAAAA,IAAI,EAAEX,mBAAUY,MAAV,CAAiBN,UAF2D;AAGlFO,EAAAA,IAAI,EAAEb,mBAAUY,MAAV,CAAiBN,UAH2D;AAIlFQ,EAAAA,OAAO,EAAEf,oBAAoB,CAACO;AAJoD,CAAhB,CAApE;;;AAQA;AACO,IAAMS,iBAAiB,GAAG;AAC/BC,EAAAA,iBAAiB,EAAEhB,mBAAUY,MADE;AAE/BK,EAAAA,IAAI,EAAEf,IAAI,CAACI,UAFoB;AAG/BQ,EAAAA,OAAO,EAAEf,oBAAoB,CAACO,UAHC;AAI/BY,EAAAA,eAAe,EAAElB,mBAAUmB,IAJI,CAIE;;AAJF,CAA1B,C,CAOP;;;AACO,IAAMC,eAAe,GAAG;AAC7BJ,EAAAA,iBAAiB,EAAEhB,mBAAUY,MADA;AAE7BK,EAAAA,IAAI,EAAEf,IAAI,CAACI,UAFkB;AAG7BQ,EAAAA,OAAO,EAAEf,oBAAoB,CAACO,UAHD;AAI7BY,EAAAA,eAAe,EAAElB,mBAAUmB,IAAV,CAAeb,UAJH,CAIe;;AAJf,CAAxB","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst VisualizationOptions = PropTypes.object;\r\ntype VisualizationOptions = any;\r\n\r\ntype Data = {\r\n  columns: any[];\r\n  rows: any[];\r\n}; // eslint-disable-line react/forbid-prop-types\r\n\r\nconst Data: PropTypes.Requireable<Data> = PropTypes.shape({\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n});\r\n\r\ntype VisualizationType = {\r\n  id?: number;\r\n  type: string;\r\n  name: string;\r\n  options: VisualizationOptions;\r\n};\r\n\r\n// @ts-expect-error ts-migrate(2322) FIXME: Type 'Requireable<InferProps<{ id: Requireable<num... Remove this comment to see the full error message\r\nconst VisualizationType: PropTypes.Requireable<VisualizationType> = PropTypes.shape({\r\n  id: PropTypes.number,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  options: VisualizationOptions.isRequired,\r\n});\r\nexport { VisualizationType };\r\n\r\n// For each visualization's renderer\r\nexport const RendererPropTypes = {\r\n  visualizationName: PropTypes.string,\r\n  data: Data.isRequired,\r\n  options: VisualizationOptions.isRequired,\r\n  onOptionsChange: PropTypes.func, // (newOptions) => void\r\n};\r\n\r\n// For each visualization's editor\r\nexport const EditorPropTypes = {\r\n  visualizationName: PropTypes.string,\r\n  data: Data.isRequired,\r\n  options: VisualizationOptions.isRequired,\r\n  onOptionsChange: PropTypes.func.isRequired, // (newOptions) => void\r\n};\r\n"],"file":"prop-types.js"}