{"version":3,"sources":["../../../../src/visualizations/chart/Editor/DefaultColorsSettings.tsx"],"names":["DefaultColorsSettings","options","data","onOptionsChange","colors","Automatic","ColorPalette","series","rows","name","key","color","seriesOptions","updateSeriesOption","prop","value","columns","title","dataIndex","width","render","unused","item","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEe,SAASA,qBAAT,OAAwE;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AACrF,MAAMC,MAAM,GAAG,oBACb;AACEC,IAAAA,SAAS,EAAE;AADb,KAEKC,qBAFL,CADa,EAKb,EALa,CAAf;AAQA,MAAMC,MAAM,GAAG,oBACb,MACE,iBAAI,2BAAaL,IAAI,CAACM,IAAlB,EAAwBP,OAAxB,CAAJ,EAAsC;AAAA,QAAGQ,IAAH,SAAGA,IAAH;AAAA,WAAe;AACnDC,MAAAA,GAAG,EAAED,IAD8C;AAEnDE,MAAAA,KAAK,EAAE,CAACV,OAAO,CAACW,aAAR,CAAsBH,IAAtB,KAA+B,EAAhC,EAAoCE,KAApC,IAA6C;AAFD,KAAf;AAAA,GAAtC,CAFW,EAMb,CAACV,OAAD,EAAUC,IAAV,CANa,CAAf;AASA,MAAMW,kBAAkB,GAAG,wBACzB,CAACH,GAAD,EAAMI,IAAN,EAAYC,KAAZ,KAAsB;AACpBZ,IAAAA,eAAe,CAAC;AACdS,MAAAA,aAAa,EAAE;AACb,SAACF,GAAD,GAAO;AACL,WAACI,IAAD,GAAQC;AADH;AADM;AADD,KAAD,CAAf;AAOD,GATwB,EAUzB,CAACZ,eAAD,CAVyB,CAA3B;AAaA,MAAMa,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,MAAM,EAAE,CAACC,MAAD,EAAcC,IAAd,kBACN,6BAAC,oBAAD,CACE;AADF;AAEE,0CAA2BA,IAAI,CAACZ,GAAhC,WAFF,CAGE;AAHF;AAIE,MAAA,WAAW,MAJb,CAKE;AALF;AAME,MAAA,YAAY,EAAEN,MANhB,CAOE;AAPF;AAQE,MAAA,SAAS,EAAC,UARZ,CASE;AATF;AAUE,MAAA,KAAK,EAAEkB,IAAI,CAACX,KAVd,CAWE;AAXF;AAYE,MAAA,QAAQ,EAAGI,KAAD,IAAgBF,kBAAkB,CAACS,IAAI,CAACZ,GAAN,EAAW,OAAX,EAAoBK,KAApB,CAZ9C,CAaE;AAbF;AAcE,MAAA,UAAU,eAAE,6BAAC,oBAAD,CAAa,KAAb;AAAmB,QAAA,KAAK,EAAEO,IAAI,CAACX,KAA/B;AAAsC,QAAA,YAAY,EAAEP;AAApD;AAdd;AALJ,GALc,CAAhB,CA/BqF,CA6DrF;;AACA,sBAAO,6BAAC,cAAD;AAAO,IAAA,UAAU,EAAE,KAAnB;AAA0B,IAAA,UAAU,EAAEG,MAAtC;AAA8C,IAAA,OAAO,EAAES,OAAvD;AAAgE,IAAA,UAAU,EAAE;AAA5E,IAAP;AACD;;AAEDhB,qBAAqB,CAACuB,SAAtB,GAAkCC,0BAAlC","sourcesContent":["import { map } from \"lodash\";\r\nimport React, { useMemo, useCallback } from \"react\";\r\nimport Table from \"antd/lib/table\";\r\nimport ColorPicker from \"@/components/ColorPicker\";\r\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\r\nimport ColorPalette from \"@/visualizations/ColorPalette\";\r\nimport getChartData from \"../getChartData\";\r\n\r\nexport default function DefaultColorsSettings({ options, data, onOptionsChange }: any) {\r\n  const colors = useMemo(\r\n    () => ({\r\n      Automatic: null,\r\n      ...ColorPalette,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const series = useMemo(\r\n    () =>\r\n      map(getChartData(data.rows, options), ({ name }) => ({\r\n        key: name,\r\n        color: (options.seriesOptions[name] || {}).color || null,\r\n      })),\r\n    [options, data]\r\n  );\r\n\r\n  const updateSeriesOption = useCallback(\r\n    (key, prop, value) => {\r\n      onOptionsChange({\r\n        seriesOptions: {\r\n          [key]: {\r\n            [prop]: value,\r\n          },\r\n        },\r\n      });\r\n    },\r\n    [onOptionsChange]\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Series\",\r\n      dataIndex: \"key\",\r\n    },\r\n    {\r\n      title: \"Color\",\r\n      dataIndex: \"color\",\r\n      width: \"1%\",\r\n      render: (unused: any, item: any) => (\r\n        <ColorPicker\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\r\n          data-test={`Chart.Series.${item.key}.Color`}\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\r\n          interactive\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"Indian Red\": string; \"Green 2\": string; \"... Remove this comment to see the full error message\r\n          presetColors={colors}\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\r\n          placement=\"topRight\"\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\r\n          color={item.color}\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(value: any) => void' is not assignable to t... Remove this comment to see the full error message\r\n          onChange={(value: any) => updateSeriesOption(item.key, \"color\", value)}\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'never'.\r\n          addonAfter={<ColorPicker.Label color={item.color} presetColors={colors} />}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean[]' is not assignable to type 'object... Remove this comment to see the full error message\r\n  return <Table showHeader={false} dataSource={series} columns={columns} pagination={false} />;\r\n}\r\n\r\nDefaultColorsSettings.propTypes = EditorPropTypes;\r\n"],"file":"DefaultColorsSettings.js"}