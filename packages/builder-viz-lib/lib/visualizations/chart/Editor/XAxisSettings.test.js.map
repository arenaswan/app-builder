{"version":3,"sources":["../../../../src/visualizations/chart/Editor/XAxisSettings.test.tsx"],"names":["findByTestID","wrapper","testId","find","mount","options","done","enzyme","columns","rows","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","xAxis","type","labels","enabled","last","simulate","target","value","sortX","reverseX"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport enzyme from \"enzyme\";\r\n\r\nimport getOptions from \"../getOptions\";\r\nimport XAxisSettings from \"./XAxisSettings\";\r\n\r\nfunction findByTestID(wrapper: any, testId: any) {\r\n  return wrapper.find(`[data-test=\"${testId}\"]`);\r\n}\r\n\r\nfunction mount(options: any, done: any) {\r\n  options = getOptions(options);\r\n  return enzyme.mount(\r\n    <XAxisSettings\r\n      visualizationName=\"Test\"\r\n      data={{ columns: [], rows: [] }}\r\n      options={options}\r\n      onOptionsChange={changedOptions => {\r\n        expect(changedOptions).toMatchSnapshot();\r\n        done();\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ndescribe(\"Visualizations -> Chart -> Editor -> X-Axis Settings\", () => {\r\n  test(\"Changes axis type\", done => {\r\n    const el = mount(\r\n      {\r\n        globalSeriesType: \"column\",\r\n        xAxis: { type: \"-\", labels: { enabled: true } },\r\n      },\r\n      done\r\n    );\r\n\r\n    findByTestID(el, \"Chart.XAxis.Type\")\r\n      .last()\r\n      .simulate(\"mouseDown\");\r\n    findByTestID(el, \"Chart.XAxis.Type.Linear\")\r\n      .last()\r\n      .simulate(\"click\");\r\n  });\r\n\r\n  test(\"Changes axis name\", done => {\r\n    const el = mount(\r\n      {\r\n        globalSeriesType: \"column\",\r\n        xAxis: { type: \"-\", labels: { enabled: true } },\r\n      },\r\n      done\r\n    );\r\n\r\n    findByTestID(el, \"Chart.XAxis.Name\")\r\n      .last()\r\n      .simulate(\"change\", { target: { value: \"test\" } });\r\n  });\r\n\r\n  test(\"Sets Show Labels option\", done => {\r\n    const el = mount(\r\n      {\r\n        globalSeriesType: \"column\",\r\n        xAxis: { type: \"-\", labels: { enabled: false } },\r\n      },\r\n      done\r\n    );\r\n\r\n    findByTestID(el, \"Chart.XAxis.ShowLabels\")\r\n      .last()\r\n      .simulate(\"click\");\r\n  });\r\n\r\n  test(\"Sets Sort X Values option\", done => {\r\n    const el = mount(\r\n      {\r\n        globalSeriesType: \"column\",\r\n        sortX: false,\r\n      },\r\n      done\r\n    );\r\n\r\n    findByTestID(el, \"Chart.XAxis.Sort\")\r\n      .last()\r\n      .simulate(\"click\");\r\n  });\r\n\r\n  test(\"Sets Reverse X Values option\", done => {\r\n    const el = mount(\r\n      {\r\n        globalSeriesType: \"column\",\r\n        reverseX: false,\r\n      },\r\n      done\r\n    );\r\n\r\n    findByTestID(el, \"Chart.XAxis.Reverse\")\r\n      .last()\r\n      .simulate(\"click\");\r\n  });\r\n});\r\n"],"file":"XAxisSettings.test.js"}