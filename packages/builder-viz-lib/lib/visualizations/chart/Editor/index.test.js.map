{"version":3,"sources":["../../../../src/visualizations/chart/Editor/index.test.tsx"],"names":["findByTestID","wrapper","testId","find","elementExists","length","mount","options","data","enzyme","describe","test","el","globalSeriesType","columns","rows","expect","toBeTruthy","toBeFalsy"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport enzyme from \"enzyme\";\r\n\r\nimport getOptions from \"../getOptions\";\r\nimport Editor from \"./index\";\r\n\r\nfunction findByTestID(wrapper: any, testId: any) {\r\n  return wrapper.find(`[data-test=\"${testId}\"]`);\r\n}\r\n\r\nfunction elementExists(wrapper: any, testId: any) {\r\n  return findByTestID(wrapper, testId).length > 0;\r\n}\r\n\r\nfunction mount(options: any, data: any) {\r\n  options = getOptions(options);\r\n  return enzyme.mount(<Editor visualizationName=\"Test\" data={data} options={options} onOptionsChange={() => {}} />);\r\n}\r\n\r\ndescribe(\"Visualizations -> Chart -> Editor (wrapper)\", () => {\r\n  test(\"Renders generic wrapper\", () => {\r\n    const el = mount({ globalSeriesType: \"column\" }, { columns: [], rows: [] });\r\n\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.General\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.XAxis\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.YAxis\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Series\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Colors\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.DataLabels\")).toBeTruthy();\r\n\r\n    expect(elementExists(el, \"Chart.GlobalSeriesType\")).toBeTruthy(); // general settings block exists\r\n    expect(elementExists(el, \"Chart.Custom.Code\")).toBeFalsy(); // custom settings block does not exist\r\n  });\r\n\r\n  test(\"Renders wrapper for custom charts\", () => {\r\n    const el = mount({ globalSeriesType: \"custom\" }, { columns: [], rows: [] });\r\n\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.General\")).toBeTruthy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.XAxis\")).toBeFalsy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.YAxis\")).toBeFalsy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Series\")).toBeFalsy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Colors\")).toBeFalsy();\r\n    expect(elementExists(el, \"VisualizationEditor.Tabs.DataLabels\")).toBeFalsy();\r\n\r\n    expect(elementExists(el, \"Chart.GlobalSeriesType\")).toBeTruthy(); // general settings block exists\r\n    expect(elementExists(el, \"Chart.Custom.Code\")).toBeTruthy(); // custom settings block exists\r\n  });\r\n});\r\n"],"file":"index.test.js"}