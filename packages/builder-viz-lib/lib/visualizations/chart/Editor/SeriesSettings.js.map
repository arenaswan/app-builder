{"version":3,"sources":["../../../../src/visualizations/chart/Editor/SeriesSettings.tsx"],"names":["SortableBodyRow","props","getTableColumns","options","updateSeriesOption","debouncedUpdateSeriesOption","result","title","dataIndex","render","unused","item","zIndex","key","name","event","target","value","globalSeriesType","swappedAxes","push","yAxis","type","SeriesSettings","data","onOptionsChange","series","rows","seriesOptions","handleSortEnd","oldIndex","newIndex","splice","prop","columns","container","querySelector","className","body","row","index","propTypes","EditorPropTypes"],"mappings":"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","sourcesContent":["import { includes, map, extend, fromPairs } from \"lodash\";\r\nimport React, { useMemo, useCallback } from \"react\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport Table from \"antd/lib/table\";\r\nimport Input from \"antd/lib/input\";\r\nimport Radio from \"antd/lib/radio\";\r\n// @ts-expect-error ts-migrate(2724) FIXME: Module '\"../../../../node_modules/react-sortable-h... Remove this comment to see the full error message\r\nimport { sortableElement } from \"react-sortable-hoc\";\r\nimport { SortableContainer, DragHandle } from \"@/components/sortable\";\r\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\r\nimport ChartTypeSelect from \"./ChartTypeSelect\";\r\nimport getChartData from \"../getChartData\";\r\n\r\nconst SortableBodyRow = sortableElement((props: any) => <tr {...props} />);\r\n\r\nfunction getTableColumns(options: any, updateSeriesOption: any, debouncedUpdateSeriesOption: any) {\r\n  const result = [\r\n    {\r\n      title: \"Order\",\r\n      dataIndex: \"zIndex\",\r\n      render: (unused: any, item: any) => (\r\n        <span className=\"series-settings-order\">\r\n          <DragHandle />\r\n          {item.zIndex + 1}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Label\",\r\n      dataIndex: \"name\",\r\n      render: (unused: any, item: any) => (\r\n        <Input\r\n          data-test={`Chart.Series.${item.key}.Label`}\r\n          placeholder={item.key}\r\n          defaultValue={item.name}\r\n          onChange={event => debouncedUpdateSeriesOption(item.key, \"name\", event.target.value)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (!includes([\"pie\", \"heatmap\"], options.globalSeriesType)) {\r\n    if (!options.swappedAxes) {\r\n      result.push({\r\n        title: \"Y Axis\",\r\n        dataIndex: \"yAxis\",\r\n        render: (unused, item) => (\r\n          <Radio.Group\r\n            className=\"series-settings-y-axis\"\r\n            value={item.yAxis === 1 ? 1 : 0}\r\n            onChange={event => updateSeriesOption(item.key, \"yAxis\", event.target.value)}>\r\n            <Radio value={0} data-test={`Chart.Series.${item.key}.UseLeftAxis`}>\r\n              left\r\n            </Radio>\r\n            <Radio value={1} data-test={`Chart.Series.${item.key}.UseRightAxis`}>\r\n              right\r\n            </Radio>\r\n          </Radio.Group>\r\n        ),\r\n      });\r\n    }\r\n\r\n    result.push({\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      render: (unused, item) => (\r\n        <ChartTypeSelect\r\n          data-test={`Chart.Series.${item.key}.Type`}\r\n          dropdownMatchSelectWidth={false}\r\n          value={item.type}\r\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\r\n          hiddenChartTypes={[\"pie\", \"heatmap\", \"bubble\", \"box\"]}\r\n          onChange={(value: any) => updateSeriesOption(item.key, \"type\", value)}\r\n        />\r\n      ),\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default function SeriesSettings({ options, data, onOptionsChange }: any) {\r\n  const series = useMemo(\r\n    () =>\r\n      map(\r\n        getChartData(data.rows, options), // returns sorted series\r\n        ({ name }, zIndex) =>\r\n          extend({ key: name, type: options.globalSeriesType }, options.seriesOptions[name], { zIndex })\r\n      ),\r\n    [options, data]\r\n  );\r\n\r\n  const handleSortEnd = useCallback(\r\n    ({ oldIndex, newIndex }) => {\r\n      const seriesOptions = [...series];\r\n      seriesOptions.splice(newIndex, 0, ...seriesOptions.splice(oldIndex, 1));\r\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'key' does not exist on type 'Boolean'.\r\n      onOptionsChange({ seriesOptions: fromPairs(map(seriesOptions, ({ key }, zIndex) => [key, { zIndex }])) });\r\n    },\r\n    [onOptionsChange, series]\r\n  );\r\n\r\n  const updateSeriesOption = useCallback(\r\n    (key, prop, value) => {\r\n      onOptionsChange({\r\n        seriesOptions: {\r\n          [key]: {\r\n            [prop]: value,\r\n          },\r\n        },\r\n      });\r\n    },\r\n    [onOptionsChange]\r\n  );\r\n  const [debouncedUpdateSeriesOption] = useDebouncedCallback(updateSeriesOption, 200);\r\n\r\n  const columns = useMemo(() => getTableColumns(options, updateSeriesOption, debouncedUpdateSeriesOption), [\r\n    options,\r\n    updateSeriesOption,\r\n    debouncedUpdateSeriesOption,\r\n  ]);\r\n\r\n  return (\r\n    <SortableContainer\r\n      axis=\"y\"\r\n      lockAxis=\"y\"\r\n      lockToContainerEdges\r\n      useDragHandle\r\n      helperClass=\"chart-editor-series-dragged-item\"\r\n      helperContainer={(container: any) => container.querySelector(\"tbody\")}\r\n      onSortEnd={handleSortEnd}\r\n      containerProps={{\r\n        className: \"chart-editor-series\",\r\n      }}>\r\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\r\n      <Table\r\n        // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean[]' is not assignable to type 'object... Remove this comment to see the full error message\r\n        dataSource={series}\r\n        columns={columns}\r\n        components={{\r\n          body: {\r\n            row: SortableBodyRow,\r\n          },\r\n        }}\r\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(item: object) => { index: any; }' is not as... Remove this comment to see the full error message\r\n        onRow={item => ({ index: item.zIndex })}\r\n        pagination={false}\r\n      />\r\n    </SortableContainer>\r\n  );\r\n}\r\n\r\nSeriesSettings.propTypes = EditorPropTypes;\r\n"],"file":"SeriesSettings.js"}