{"version":3,"sources":["../../../../src/visualizations/chart/Renderer/PlotlyChart.tsx"],"names":["PlotlyChart","options","data","container","setContainer","chart","setChart","errorHandler","ErrorBoundaryContext","errorHandlerRef","current","isMobile","maxWidth","isMobileRef","isDestroyed","chartData","rows","_chart","visualizationsSettings","error","handleError","initialized","then","destroy","setZoomEnabled","propTypes","RendererPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAUe,SAASA,WAAT,OAA0D;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;;AAAA,kBACrC,qBAAS,IAAT,CADqC;AAAA;AAAA,MAChEC,SADgE;AAAA,MACrDC,YADqD;;AAAA,mBAE7C,qBAAS,IAAT,CAF6C;AAAA;AAAA,MAEhEC,KAFgE;AAAA,MAEzDC,QAFyD;;AAIvE,MAAMC,YAAY,GAAG,uBAAWC,mCAAX,CAArB;AACA,MAAMC,eAAe,GAAG,oBAAxB,CALuE,CAMvE;;AACAA,EAAAA,eAAe,CAACC,OAAhB,GAA0BH,YAA1B;AAEA,MAAMI,QAAQ,GAAG,uBAAS;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAT,CAAjB;AACA,MAAMC,WAAW,GAAG,oBAApB,CAVuE,CAWvE;;AACAA,EAAAA,WAAW,CAACH,OAAZ,GAAsBC,QAAtB;AAEA,wBAAU,MAAM;AACd,QAAIR,SAAJ,EAAe;AACb,UAAIW,WAAW,GAAG,KAAlB;AAEA,UAAMC,SAAS,GAAG,2BAAab,IAAI,CAACc,IAAlB,EAAwBf,OAAxB,CAAlB;;AACA,UAAMgB,MAAM,GAAG,wBAAUd,SAAV,EAAqBF,OAArB,EAA8Bc,SAA9B,EAAyCG,8CAAzC,EAAkEC,KAAD,IAAgB;AAC9F;AACAV,QAAAA,eAAe,CAACC,OAAhB,CAAwBU,WAAxB,CAAoCD,KAApC;AACD,OAHc,CAAf;;AAIAF,MAAAA,MAAM,CAACI,WAAP,CAAmBC,IAAnB,CAAwB,MAAM;AAC5B,YAAI,CAACR,WAAL,EAAkB;AAChBR,UAAAA,QAAQ,CAACW,MAAD,CAAR;AACD;AACF,OAJD;;AAKA,aAAO,MAAM;AACXH,QAAAA,WAAW,GAAG,IAAd;;AACAG,QAAAA,MAAM,CAACM,OAAP;AACD,OAHD;AAID;AACF,GAnBD,EAmBG,CAACtB,OAAD,EAAUC,IAAV,EAAgBC,SAAhB,CAnBH;AAqBA,wBAAU,MAAM;AACd,QAAIE,KAAJ,EAAW;AACT;AACAA,MAAAA,KAAK,CAACmB,cAAN,CAAqB,CAACb,QAAtB;AACD;AACF,GALD,EAKG,CAACN,KAAD,EAAQM,QAAR,CALH,EAnCuE,CA0CvE;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,+BAAf;AAA+C,IAAA,GAAG,EAAEP;AAApD,IAAP;AACD;;AAEDJ,WAAW,CAACyB,SAAZ,GAAwBC,4BAAxB","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport useMedia from \"use-media\";\r\nimport { ErrorBoundaryContext } from \"@/components/ErrorBoundary\";\r\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\r\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\r\nimport getChartData from \"../getChartData\";\r\nimport initChart from \"./initChart\";\r\n\r\nexport interface PlotlyChartProps {\r\n  data: {\r\n    rows: any[];\r\n    columns: any[];\r\n  };\r\n  options: object;\r\n}\r\n\r\nexport default function PlotlyChart({ options, data }: PlotlyChartProps) {\r\n  const [container, setContainer] = useState(null);\r\n  const [chart, setChart] = useState(null);\r\n\r\n  const errorHandler = useContext(ErrorBoundaryContext);\r\n  const errorHandlerRef = useRef();\r\n  // @ts-expect-error ts-migrate(2322) FIXME: Type '{ handleError: (error: any) => void; reset: ... Remove this comment to see the full error message\r\n  errorHandlerRef.current = errorHandler;\r\n\r\n  const isMobile = useMedia({ maxWidth: 768 });\r\n  const isMobileRef = useRef();\r\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'undefine... Remove this comment to see the full error message\r\n  isMobileRef.current = isMobile;\r\n\r\n  useEffect(() => {\r\n    if (container) {\r\n      let isDestroyed = false;\r\n\r\n      const chartData = getChartData(data.rows, options);\r\n      const _chart = initChart(container, options, chartData, visualizationsSettings, (error: any) => {\r\n        // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\r\n        errorHandlerRef.current.handleError(error);\r\n      });\r\n      _chart.initialized.then(() => {\r\n        if (!isDestroyed) {\r\n          setChart(_chart);\r\n        }\r\n      });\r\n      return () => {\r\n        isDestroyed = true;\r\n        _chart.destroy();\r\n      };\r\n    }\r\n  }, [options, data, container]);\r\n\r\n  useEffect(() => {\r\n    if (chart) {\r\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\r\n      chart.setZoomEnabled(!isMobile);\r\n    }\r\n  }, [chart, isMobile]);\r\n\r\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\r\n  return <div className=\"chart-visualization-container\" ref={setContainer} />;\r\n}\r\n\r\nPlotlyChart.propTypes = RendererPropTypes;\r\n"],"file":"PlotlyChart.js"}