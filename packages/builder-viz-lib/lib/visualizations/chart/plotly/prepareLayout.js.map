{"version":3,"sources":["../../../../src/visualizations/chart/plotly/prepareLayout.ts"],"names":["getAxisTitle","axis","title","text","getAxisScaleType","type","prepareXAxis","axisOptions","additionalOptions","automargin","sortX","reverseX","categoryorder","labels","showticklabels","enabled","prepareYAxis","autorange","range","preparePieLayout","layout","options","data","hasName","test","textFormat","cellsInRow","cellWidth","cellHeight","xPadding","annotations","series","index","xPosition","yPosition","Math","floor","x","y","xanchor","yanchor","name","showarrow","prepareDefaultLayout","y2Series","filter","s","yaxis","xaxis","xAxis","yAxis","length","yaxis2","overlaying","side","stacking","barmode","prepareBoxLayout","boxmode","boxgroupgap","prepareLayout","element","margin","l","r","b","t","pad","width","max","offsetWidth","height","offsetHeight","autosize","showlegend","legend","traceorder","globalSeriesType"],"mappings":"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","sourcesContent":["import { isObject, isUndefined, filter, map } from \"lodash\";\r\nimport { getPieDimensions } from \"./preparePieData\";\r\n\r\nfunction getAxisTitle(axis: any) {\r\n  return isObject(axis.title) ? axis.title.text : null;\r\n}\r\n\r\nfunction getAxisScaleType(axis: any) {\r\n  switch (axis.type) {\r\n    case \"datetime\":\r\n      return \"date\";\r\n    case \"logarithmic\":\r\n      return \"log\";\r\n    default:\r\n      return axis.type;\r\n  }\r\n}\r\n\r\nfunction prepareXAxis(axisOptions: any, additionalOptions: any) {\r\n  const axis = {\r\n    title: getAxisTitle(axisOptions),\r\n    type: getAxisScaleType(axisOptions),\r\n    automargin: true,\r\n  };\r\n\r\n  if (additionalOptions.sortX && axis.type === \"category\") {\r\n    if (additionalOptions.reverseX) {\r\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'categoryorder' does not exist on type '{... Remove this comment to see the full error message\r\n      axis.categoryorder = \"category descending\";\r\n    } else {\r\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'categoryorder' does not exist on type '{... Remove this comment to see the full error message\r\n      axis.categoryorder = \"category ascending\";\r\n    }\r\n  }\r\n\r\n  if (!isUndefined(axisOptions.labels)) {\r\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'showticklabels' does not exist on type '... Remove this comment to see the full error message\r\n    axis.showticklabels = axisOptions.labels.enabled;\r\n  }\r\n\r\n  return axis;\r\n}\r\n\r\nfunction prepareYAxis(axisOptions: any) {\r\n  return {\r\n    title: getAxisTitle(axisOptions),\r\n    type: getAxisScaleType(axisOptions),\r\n    automargin: true,\r\n    autorange: true,\r\n    range: null,\r\n  };\r\n}\r\n\r\nfunction preparePieLayout(layout: any, options: any, data: any) {\r\n  const hasName = /{{\\s*@@name\\s*}}/.test(options.textFormat);\r\n\r\n  const { cellsInRow, cellWidth, cellHeight, xPadding } = getPieDimensions(data);\r\n\r\n  if (hasName) {\r\n    layout.annotations = [];\r\n  } else {\r\n    layout.annotations = filter(\r\n      map(data, (series, index) => {\r\n        // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\r\n        const xPosition = (index % cellsInRow) * cellWidth;\r\n        // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\r\n        const yPosition = Math.floor(index / cellsInRow) * cellHeight;\r\n        return {\r\n          x: xPosition + (cellWidth - xPadding) / 2,\r\n          y: yPosition + cellHeight - 0.015,\r\n          xanchor: \"center\",\r\n          yanchor: \"top\",\r\n          text: series.name,\r\n          showarrow: false,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  return layout;\r\n}\r\n\r\nfunction prepareDefaultLayout(layout: any, options: any, data: any) {\r\n  const y2Series = data.filter((s: any) => s.yaxis === \"y2\");\r\n\r\n  layout.xaxis = prepareXAxis(options.xAxis, options);\r\n\r\n  layout.yaxis = prepareYAxis(options.yAxis[0]);\r\n  if (y2Series.length > 0) {\r\n    layout.yaxis2 = prepareYAxis(options.yAxis[1]);\r\n    layout.yaxis2.overlaying = \"y\";\r\n    layout.yaxis2.side = \"right\";\r\n  }\r\n\r\n  if (options.series.stacking) {\r\n    layout.barmode = \"relative\";\r\n  }\r\n\r\n  return layout;\r\n}\r\n\r\nfunction prepareBoxLayout(layout: any, options: any, data: any) {\r\n  layout = prepareDefaultLayout(layout, options, data);\r\n  layout.boxmode = \"group\";\r\n  layout.boxgroupgap = 0.5;\r\n  return layout;\r\n}\r\n\r\nexport default function prepareLayout(element: any, options: any, data: any) {\r\n  const layout = {\r\n    margin: { l: 10, r: 10, b: 5, t: 20, pad: 4 },\r\n    // plot size should be at least 5x5px\r\n    width: Math.max(5, Math.floor(element.offsetWidth)),\r\n    height: Math.max(5, Math.floor(element.offsetHeight)),\r\n    autosize: false,\r\n    showlegend: options.legend.enabled,\r\n    legend: {\r\n      traceorder: options.legend.traceorder,\r\n    },\r\n  };\r\n\r\n  switch (options.globalSeriesType) {\r\n    case \"pie\":\r\n      return preparePieLayout(layout, options, data);\r\n    case \"box\":\r\n      return prepareBoxLayout(layout, options, data);\r\n    default:\r\n      return prepareDefaultLayout(layout, options, data);\r\n  }\r\n}\r\n"],"file":"prepareLayout.js"}