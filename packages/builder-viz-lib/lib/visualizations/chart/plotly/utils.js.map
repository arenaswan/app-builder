{"version":3,"sources":["../../../../src/visualizations/chart/plotly/utils.ts"],"names":["cleanNumber","value","getSeriesAxis","series","options","seriesOptions","name","type","globalSeriesType","yAxis","stacking","normalizeValue","axisType","dateTimeFormat","moment","utc","isValid","isMoment","format"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;AADA;AAGO,SAASA,WAAT,CAAqBC,KAArB,EAAiC;AACtC,SAAO,yBAAYA,KAAZ,IAAqBA,KAArB,GAA6B,2BAAkBA,KAAlB,CAApC;AACD;;AAEM,SAASC,aAAT,CAAuBC,MAAvB,EAAoCC,OAApC,EAAkD;AACvD,MAAMC,aAAa,GAAGD,OAAO,CAACC,aAAR,CAAsBF,MAAM,CAACG,IAA7B,KAAsC;AAAEC,IAAAA,IAAI,EAAEH,OAAO,CAACI;AAAhB,GAA5D;;AACA,MAAIH,aAAa,CAACI,KAAd,KAAwB,CAAxB,KAA8B,CAACL,OAAO,CAACD,MAAR,CAAeO,QAAhB,IAA4BL,aAAa,CAACE,IAAd,KAAuB,MAAjF,CAAJ,EAA8F;AAC5F,WAAO,IAAP;AACD;;AACD,SAAO,GAAP;AACD;;AAEM,SAASI,cAAT,CAAwBV,KAAxB,EAAoCW,QAApC,EAA2F;AAAA,MAAxCC,cAAwC,uEAAvB,qBAAuB;;AAChG,MAAID,QAAQ,KAAK,UAAb,IAA2BE,gBAAOC,GAAP,CAAWd,KAAX,EAAkBe,OAAlB,EAA/B,EAA4D;AAC1Df,IAAAA,KAAK,GAAGa,gBAAOC,GAAP,CAAWd,KAAX,CAAR;AACD;;AACD,MAAIa,gBAAOG,QAAP,CAAgBhB,KAAhB,CAAJ,EAA4B;AAC1B,WAAOA,KAAK,CAACiB,MAAN,CAAaL,cAAb,CAAP;AACD;;AACD,SAAOZ,KAAP;AACD","sourcesContent":["import { isUndefined } from \"lodash\";\r\nimport moment from \"moment\";\r\n// @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module 'plot... Remove this comment to see the full error message\r\nimport plotlyCleanNumber from \"plotly.js/src/lib/clean_number\";\r\n\r\nexport function cleanNumber(value: any) {\r\n  return isUndefined(value) ? value : plotlyCleanNumber(value);\r\n}\r\n\r\nexport function getSeriesAxis(series: any, options: any) {\r\n  const seriesOptions = options.seriesOptions[series.name] || { type: options.globalSeriesType };\r\n  if (seriesOptions.yAxis === 1 && (!options.series.stacking || seriesOptions.type === \"line\")) {\r\n    return \"y2\";\r\n  }\r\n  return \"y\";\r\n}\r\n\r\nexport function normalizeValue(value: any, axisType: any, dateTimeFormat = \"YYYY-MM-DD HH:mm:ss\") {\r\n  if (axisType === \"datetime\" && moment.utc(value).isValid()) {\r\n    value = moment.utc(value);\r\n  }\r\n  if (moment.isMoment(value)) {\r\n    return value.format(dateTimeFormat);\r\n  }\r\n  return value;\r\n}\r\n"],"file":"utils.js"}