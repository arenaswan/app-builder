{"version":3,"sources":["../../../../src/visualizations/chart/plotly/customChartUtils.ts"],"names":["prepareCustomChartData","series","x","ys","name","data","point","push","y","createCustomChartRenderer","code","logErrorsToConsole","render","Function","err","console","log","element","Plotly"],"mappings":";;;;;;;;AAAA;;AACA;;AAEO,SAASA,sBAAT,CAAgCC,MAAhC,EAA6C;AAClD,MAAMC,CAAM,GAAG,EAAf;AACA,MAAMC,EAAE,GAAG,EAAX;AAEA,oBAAKF,MAAL,EAAa,UAAoB;AAAA,QAAjBG,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/B;AACAF,IAAAA,EAAE,CAACC,IAAD,CAAF,GAAW,EAAX;AACA,sBAAKC,IAAL,EAAWC,KAAK,IAAI;AAClB;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,2BAAeD,KAAK,CAACJ,CAArB,CAAP,EAFkB,CAGlB;;AACAC,MAAAA,EAAE,CAACC,IAAD,CAAF,CAASG,IAAT,CAAc,2BAAeD,KAAK,CAACE,CAArB,CAAd;AACD,KALD;AAMD,GATD;AAWA,SAAO;AAAEN,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAP;AACD;;AAEM,SAASM,yBAAT,CAAmCC,IAAnC,EAA0E;AAAA,MAA5BC,kBAA4B,uEAAP,KAAO;;AAC/E;AACA,MAAIC,MAAM,GAAG,MAAM,CAAE,CAArB;;AACA,MAAI;AACF;AACAA,IAAAA,MAAM,GAAG,IAAIC,QAAJ,CAAa,wBAAb,EAAuCH,IAAvC,CAAT,CAFE,CAEqD;AACxD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,QAAIH,kBAAJ,EAAwB;AACtBI,MAAAA,OAAO,CAACC,GAAR,+CAAmDF,GAAnD,GADsB,CACqC;AAC5D;AACF,GAV8E,CAY/E;;;AACA,SAAO,CAACZ,CAAD,EAASC,EAAT,EAAkBc,OAAlB,EAAgCC,MAAhC,KAAgD;AACrD,QAAI;AACF;AACAN,MAAAA,MAAM,CAACV,CAAD,EAAIC,EAAJ,EAAQc,OAAR,EAAiBC,MAAjB,CAAN;AACD,KAHD,CAGE,OAAOJ,GAAP,EAAY;AACZ,UAAIH,kBAAJ,EAAwB;AACtBI,QAAAA,OAAO,CAACC,GAAR,+CAAmDF,GAAnD,GADsB,CACqC;AAC5D;AACF;AACF,GATD;AAUD","sourcesContent":["import { each } from \"lodash\";\r\nimport { normalizeValue } from \"./utils\";\r\n\r\nexport function prepareCustomChartData(series: any) {\r\n  const x: any = [];\r\n  const ys = {};\r\n\r\n  each(series, ({ name, data }) => {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    ys[name] = [];\r\n    each(data, point => {\r\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2-3 arguments, but got 1.\r\n      x.push(normalizeValue(point.x));\r\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n      ys[name].push(normalizeValue(point.y));\r\n    });\r\n  });\r\n\r\n  return { x, ys };\r\n}\r\n\r\nexport function createCustomChartRenderer(code: any, logErrorsToConsole = false) {\r\n  // Create a function from custom code; catch syntax errors\r\n  let render = () => {};\r\n  try {\r\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'Function' is not assignable to type '() => v... Remove this comment to see the full error message\r\n    render = new Function(\"x, ys, element, Plotly\", code); // eslint-disable-line no-new-func\r\n  } catch (err) {\r\n    if (logErrorsToConsole) {\r\n      console.log(`Error while executing custom graph: ${err}`); // eslint-disable-line no-console\r\n    }\r\n  }\r\n\r\n  // Return function that will invoke custom code; catch runtime errors\r\n  return (x: any, ys: any, element: any, Plotly: any) => {\r\n    try {\r\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 4.\r\n      render(x, ys, element, Plotly);\r\n    } catch (err) {\r\n      if (logErrorsToConsole) {\r\n        console.log(`Error while executing custom graph: ${err}`); // eslint-disable-line no-console\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"file":"customChartUtils.js"}