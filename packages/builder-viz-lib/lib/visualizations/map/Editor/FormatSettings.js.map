{"version":3,"sources":["../../../../src/visualizations/map/Editor/FormatSettings.tsx"],"names":["TemplateFormatHint","paddingBottom","FormatSettings","options","onOptionsChange","onOptionsChangeDebounced","templateFormatHint","tooltip","enabled","event","target","checked","template","value","popup","propTypes","EditorPropTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,SAASA,kBAAT,GAA8B;AAC5B;AACA;AAAA;AACE;AACA,iCAAC,mBAAD;AAAa,MAAA,SAAS,EAAC,SAAvB;AAAiC,MAAA,kBAAkB;AAAnD,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB;AAAZ,yEACmD,2CAAO,mBAAP,CADnD,aADF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB;AAAZ,yDAJF;AAFF;AASD;;AAEc,SAASC,cAAT,OAA2D;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;;AAAA,8BACrC,uCAAqBA,eAArB,EAAsC,GAAtC,CADqC;AAAA;AAAA,MACjEC,wBADiE;;AAGxE,MAAMC,kBAAkB,gBAAG,6BAAC,kBAAD,OAA3B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBAEE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,2BADZ;AAEE,IAAA,OAAO,EAAEH,OAAO,CAACI,OAAR,CAAgBC,OAF3B;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIL,eAAe,CAAC;AAAEG,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAxB;AAAX,KAAD;AAHpC,oBADF,CAFF,eAYE,6BAAC,eAAD,qBACE,6BAAC,aAAD;AACE,IAAA,KAAK,eAAE,6BAAC,cAAD,CAAO,QAAP,6BAAkCL,kBAAlC,CADT;AAEE,iBAAU,4BAFZ;AAGE,IAAA,QAAQ,EAAE,CAACH,OAAO,CAACI,OAAR,CAAgBC,OAH7B;AAIE,IAAA,WAAW,EAAC,kBAJd;AAKE,IAAA,YAAY,EAAEL,OAAO,CAACI,OAAR,CAAgBK,QALhC;AAME,IAAA,QAAQ,EAAGH,KAAD,IAAgBJ,wBAAwB,CAAC;AAAEE,MAAAA,OAAO,EAAE;AAAEK,QAAAA,QAAQ,EAAEH,KAAK,CAACC,MAAN,CAAaG;AAAzB;AAAX,KAAD;AANpD,IADF,CAZF,eAwBE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,yBADZ;AAEE,IAAA,OAAO,EAAEV,OAAO,CAACW,KAAR,CAAcN,OAFzB;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIL,eAAe,CAAC;AAAEU,MAAAA,KAAK,EAAE;AAAEN,QAAAA,OAAO,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAxB;AAAT,KAAD;AAHpC,kBADF,CAxBF,eAkCE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,IAAA,KAAK,eAAE,6BAAC,cAAD,CAAO,QAAP,2BAAgCL,kBAAhC,CADT;AAEE,iBAAU,0BAFZ;AAGE,IAAA,QAAQ,EAAE,CAACH,OAAO,CAACW,KAAR,CAAcN,OAH3B;AAIE,IAAA,IAAI,EAAE,CAJR;AAKE,IAAA,WAAW,EAAC,kBALd;AAME,IAAA,YAAY,EAAEL,OAAO,CAACW,KAAR,CAAcF,QAN9B;AAOE,IAAA,QAAQ,EAAGH,KAAD,IAAgBJ,wBAAwB,CAAC;AAAES,MAAAA,KAAK,EAAE;AAAEF,QAAAA,QAAQ,EAAEH,KAAK,CAACC,MAAN,CAAaG;AAAzB;AAAT,KAAD;AAPpD,IADF,CAlCF,CADF;AAgDD;;AAEDX,cAAc,CAACa,SAAf,GAA2BC,0BAA3B","sourcesContent":["import React from \"react\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { Section, Input, Checkbox, TextArea, ContextHelp } from \"@/components/visualizations/editor\";\r\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\r\n\r\nfunction TemplateFormatHint() {\r\n  // eslint-disable-line react/prop-types\r\n  return (\r\n    // @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message\r\n    <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\r\n      <div style={{ paddingBottom: 5 }}>\r\n        All query result columns can be referenced using <code>{\"{{ column_name }}\"}</code> syntax.\r\n      </div>\r\n      <div style={{ paddingBottom: 5 }}>Leave this field empty to use default template.</div>\r\n    </ContextHelp>\r\n  );\r\n}\r\n\r\nexport default function FormatSettings({ options, onOptionsChange }: any) {\r\n  const [onOptionsChangeDebounced] = useDebouncedCallback(onOptionsChange, 200);\r\n\r\n  const templateFormatHint = <TemplateFormatHint />;\r\n\r\n  return (\r\n    <div className=\"map-visualization-editor-format-settings\">\r\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\r\n      <Section>\r\n        <Checkbox\r\n          data-test=\"Map.Editor.TooltipEnabled\"\r\n          checked={options.tooltip.enabled}\r\n          onChange={event => onOptionsChange({ tooltip: { enabled: event.target.checked } })}>\r\n          Show tooltip\r\n        </Checkbox>\r\n      </Section>\r\n\r\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\r\n      <Section>\r\n        <Input\r\n          label={<React.Fragment>Tooltip template {templateFormatHint}</React.Fragment>}\r\n          data-test=\"Map.Editor.TooltipTemplate\"\r\n          disabled={!options.tooltip.enabled}\r\n          placeholder=\"Default template\"\r\n          defaultValue={options.tooltip.template}\r\n          onChange={(event: any) => onOptionsChangeDebounced({ tooltip: { template: event.target.value } })}\r\n        />\r\n      </Section>\r\n\r\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\r\n      <Section>\r\n        <Checkbox\r\n          data-test=\"Map.Editor.PopupEnabled\"\r\n          checked={options.popup.enabled}\r\n          onChange={event => onOptionsChange({ popup: { enabled: event.target.checked } })}>\r\n          Show popup\r\n        </Checkbox>\r\n      </Section>\r\n\r\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\r\n      <Section>\r\n        <TextArea\r\n          label={<React.Fragment>Popup template {templateFormatHint}</React.Fragment>}\r\n          data-test=\"Map.Editor.PopupTemplate\"\r\n          disabled={!options.popup.enabled}\r\n          rows={4}\r\n          placeholder=\"Default template\"\r\n          defaultValue={options.popup.template}\r\n          onChange={(event: any) => onOptionsChangeDebounced({ popup: { template: event.target.value } })}\r\n        />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormatSettings.propTypes = EditorPropTypes;\r\n"],"file":"FormatSettings.js"}