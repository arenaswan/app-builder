{"version":3,"sources":["../../../../src/visualizations/table/columns/text.tsx"],"names":["Editor","column","onChange","allowHTML","event","target","checked","highlightLinks","initTextColumn","format","prepareData","row","text","name","TextColumn","friendlyName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAWA,SAASA,MAAT,OAA6C;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,SAAmB,QAAnBA,QAAmB;AAC3C,sBACE,6BAAC,cAAD,CAAO,QAAP,qBAEE,6BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,mCADZ;AAEE,IAAA,OAAO,EAAED,MAAM,CAACE,SAFlB;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIF,SAAQ,CAAC;AAAEC,MAAAA,SAAS,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAD;AAH7B,0BADF,CAFF,EAWGL,MAAM,CAACE,SAAP;AAAA;AACC;AACA,+BAAC,eAAD,qBACE,6BAAC,gBAAD;AACE,iBAAU,wCADZ;AAEE,IAAA,OAAO,EAAEF,MAAM,CAACM,cAFlB;AAGE,IAAA,QAAQ,EAAEH,KAAK,IAAIF,SAAQ,CAAC;AAAEK,MAAAA,cAAc,EAAEH,KAAK,CAACC,MAAN,CAAaC;AAA/B,KAAD;AAH7B,uBADF,CAbJ,CADF;AAyBD;;AAEc,SAASE,cAAT,CAAwBP,MAAxB,EAAqC;AAClD,MAAMQ,MAAM,GAAG,sCAAoBR,MAAM,CAACE,SAAP,IAAoBF,MAAM,CAACM,cAA/C,CAAf;;AAEA,WAASG,WAAT,CAAqBC,GAArB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACE,GAAG,CAACV,MAAM,CAACY,IAAR,CAAJ;AADP,KAAP;AAGD;;AAED,WAASC,UAAT,QAAkC;AAAA,QAAZH,GAAY,SAAZA,GAAY;;AAChC;AADgC,uBAEfD,WAAW,CAACC,GAAD,CAFI;AAAA,QAExBC,IAFwB,gBAExBA,IAFwB;;AAGhC,WAAOX,MAAM,CAACE,SAAP,gBAAmB,6BAAC,oBAAD,QAAcS,IAAd,CAAnB,GAAuDA,IAA9D;AACD;;AAEDE,EAAAA,UAAU,CAACJ,WAAX,GAAyBA,WAAzB;AAEA,SAAOI,UAAP;AACD;;AAEDN,cAAc,CAACO,YAAf,GAA8B,MAA9B;AACAP,cAAc,CAACR,MAAf,GAAwBA,MAAxB","sourcesContent":["import React from \"react\";\r\nimport HtmlContent from \"@/components/HtmlContent\";\r\nimport { Section, Checkbox } from \"@/components/visualizations/editor\";\r\nimport { createTextFormatter } from \"@/lib/value-format\";\r\n\r\ntype Props = {\r\n  column: {\r\n    name: string;\r\n    allowHTML?: boolean;\r\n    highlightLinks?: boolean;\r\n  };\r\n  onChange: (...args: any[]) => any;\r\n};\r\n\r\nfunction Editor({ column, onChange }: Props) {\r\n  return (\r\n    <React.Fragment>\r\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\r\n      <Section>\r\n        <Checkbox\r\n          data-test=\"Table.ColumnEditor.Text.AllowHTML\"\r\n          checked={column.allowHTML}\r\n          onChange={event => onChange({ allowHTML: event.target.checked })}>\r\n          Allow HTML content\r\n        </Checkbox>\r\n      </Section>\r\n\r\n      {column.allowHTML && (\r\n        // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\r\n        <Section>\r\n          <Checkbox\r\n            data-test=\"Table.ColumnEditor.Text.HighlightLinks\"\r\n            checked={column.highlightLinks}\r\n            onChange={event => onChange({ highlightLinks: event.target.checked })}>\r\n            Highlight links\r\n          </Checkbox>\r\n        </Section>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function initTextColumn(column: any) {\r\n  const format = createTextFormatter(column.allowHTML && column.highlightLinks);\r\n\r\n  function prepareData(row: any) {\r\n    return {\r\n      text: format(row[column.name]),\r\n    };\r\n  }\r\n\r\n  function TextColumn({ row }: any) {\r\n    // eslint-disable-line react/prop-types\r\n    const { text } = prepareData(row);\r\n    return column.allowHTML ? <HtmlContent>{text}</HtmlContent> : text;\r\n  }\r\n\r\n  TextColumn.prepareData = prepareData;\r\n\r\n  return TextColumn;\r\n}\r\n\r\ninitTextColumn.friendlyName = \"Text\";\r\ninitTextColumn.Editor = Editor;\r\n"],"file":"text.js"}