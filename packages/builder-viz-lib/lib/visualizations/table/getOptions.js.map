{"version":3,"sources":["../../../src/visualizations/table/getOptions.ts"],"names":["DEFAULT_OPTIONS","itemsPerPage","paginationSize","filterTypes","getColumnNameWithoutType","column","typeSplit","indexOf","parts","split","length","_","includes","getColumnContentAlignment","type","getDefaultColumnsOptions","columns","displayAs","integer","float","boolean","date","datetime","map","col","index","name","visible","order","title","allowSearch","alignContent","allowHTML","highlightLinks","getDefaultFormatOptions","dateTimeFormat","visualizationsSettings","dateFormat","numberFormat","integerFormat","floatFormat","booleanValues","imageUrlTemplate","imageTitleTemplate","imageWidth","imageHeight","linkUrlTemplate","linkTextTemplate","linkTitleTemplate","linkOpenInNewTab","wereColumnsReordered","queryColumns","visualizationColumns","filter","i","getColumnsOptions","options","fromPairs","extend","omit","each","sortBy","getOptions"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  itemsPerPage: 25,\r\n  paginationSize: \"default\", // not editable through Editor\r\n};\r\n\r\nconst filterTypes = [\"filter\", \"multi-filter\", \"multiFilter\"];\r\n\r\nfunction getColumnNameWithoutType(column: any) {\r\n  let typeSplit;\r\n  if (column.indexOf(\"::\") !== -1) {\r\n    typeSplit = \"::\";\r\n  } else if (column.indexOf(\"__\") !== -1) {\r\n    typeSplit = \"__\";\r\n  } else {\r\n    return column;\r\n  }\r\n\r\n  const parts = column.split(typeSplit);\r\n  if (parts[0] === \"\" && parts.length === 2) {\r\n    return parts[1];\r\n  }\r\n\r\n  if (!_.includes(filterTypes, parts[1])) {\r\n    return column;\r\n  }\r\n\r\n  return parts[0];\r\n}\r\n\r\nfunction getColumnContentAlignment(type: any) {\r\n  return [\"integer\", \"float\", \"boolean\", \"date\", \"datetime\"].indexOf(type) >= 0 ? \"right\" : \"left\";\r\n}\r\n\r\nfunction getDefaultColumnsOptions(columns: any) {\r\n  const displayAs = {\r\n    integer: \"number\",\r\n    float: \"number\",\r\n    boolean: \"boolean\",\r\n    date: \"datetime\",\r\n    datetime: \"datetime\",\r\n  };\r\n\r\n  return _.map(columns, (col, index) => ({\r\n    name: col.name,\r\n    type: col.type,\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    displayAs: displayAs[col.type] || \"string\",\r\n    visible: true,\r\n    order: 100000 + index,\r\n    title: getColumnNameWithoutType(col.name),\r\n    allowSearch: false,\r\n    alignContent: getColumnContentAlignment(col.type),\r\n    // `string` cell options\r\n    allowHTML: true,\r\n    highlightLinks: false,\r\n  }));\r\n}\r\n\r\nfunction getDefaultFormatOptions(column: any) {\r\n  const dateTimeFormat = {\r\n    date: visualizationsSettings.dateFormat || \"DD/MM/YYYY\",\r\n    datetime: visualizationsSettings.dateTimeFormat || \"DD/MM/YYYY HH:mm\",\r\n  };\r\n  const numberFormat = {\r\n    // @ts-expect-error ts-migrate(2551) FIXME: Property 'integerFormat' does not exist on type '{... Remove this comment to see the full error message\r\n    integer: visualizationsSettings.integerFormat || \"0,0\",\r\n    float: visualizationsSettings.floatFormat || \"0,0.00\",\r\n  };\r\n  return {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    dateTimeFormat: dateTimeFormat[column.type],\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    numberFormat: numberFormat[column.type],\r\n    booleanValues: visualizationsSettings.booleanValues || [\"false\", \"true\"],\r\n    // `image` cell options\r\n    imageUrlTemplate: \"{{ @ }}\",\r\n    imageTitleTemplate: \"{{ @ }}\",\r\n    imageWidth: \"\",\r\n    imageHeight: \"\",\r\n    // `link` cell options\r\n    linkUrlTemplate: \"{{ @ }}\",\r\n    linkTextTemplate: \"{{ @ }}\",\r\n    linkTitleTemplate: \"{{ @ }}\",\r\n    linkOpenInNewTab: true,\r\n  };\r\n}\r\n\r\nfunction wereColumnsReordered(queryColumns: any, visualizationColumns: any) {\r\n  queryColumns = _.map(queryColumns, col => col.name);\r\n  visualizationColumns = _.map(visualizationColumns, col => col.name);\r\n\r\n  // Some columns may be removed - so skip them (but keep original order)\r\n  visualizationColumns = _.filter(visualizationColumns, col => _.includes(queryColumns, col));\r\n  // Pick query columns that were previously saved with viz (but keep order too)\r\n  queryColumns = _.filter(queryColumns, col => _.includes(visualizationColumns, col));\r\n\r\n  // Both array now have the same size as they both contains only common columns\r\n  // (in fact, it was an intersection, that kept order of items on both arrays).\r\n  // Now check for equality item-by-item; if common columns are in the same order -\r\n  // they were not reordered in editor\r\n  for (let i = 0; i < queryColumns.length; i += 1) {\r\n    if (visualizationColumns[i] !== queryColumns[i]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getColumnsOptions(columns: any, visualizationColumns: any) {\r\n  const options = getDefaultColumnsOptions(columns);\r\n\r\n  if (wereColumnsReordered(columns, visualizationColumns)) {\r\n    visualizationColumns = _.fromPairs(\r\n      _.map(visualizationColumns, (col, index) => [col.name, _.extend({}, col, { order: index })])\r\n    );\r\n  } else {\r\n    visualizationColumns = _.fromPairs(_.map(visualizationColumns, col => [col.name, _.omit(col, \"order\")]));\r\n  }\r\n\r\n  _.each(options, col => _.extend(col, visualizationColumns[col.name]));\r\n\r\n  return _.sortBy(options, \"order\");\r\n}\r\n\r\nexport default function getOptions(options: any, { columns }: any) {\r\n  options = { ...DEFAULT_OPTIONS, ...options };\r\n  options.columns = _.map(getColumnsOptions(columns, options.columns), col => ({\r\n    ...getDefaultFormatOptions(col),\r\n    ...col,\r\n  }));\r\n  return options;\r\n}\r\n"],"file":"getOptions.js"}